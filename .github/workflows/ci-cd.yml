name: Flutter CI/CD
on:
  push:
    branches: [master, develop]  # Add 'develop' here
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.0'

      # Cache dependencies before fetching them
      - uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
      - run: flutter pub get
      - run: flutter test

      # Set up signing
      - name: Decode Keystore
        run: |
          mkdir keystore
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore/release-key.jks
          ls -alh keystore
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=$(pwd)/keystore/release-key.jks" >> android/key.properties

      # Conditional build based on branch
      - name: Build APK
        run: |
          if [ "${{ github.ref_name }}" = "master" ]; then
            flutter build apk --release
          else
            flutter build apk --release
            mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/app-develop.apk
            mv build/app/outputs/flutter-apk/app-release.apk.sha1 build/app/outputs/flutter-apk/app-develop.apk.sha1
          fi

      # Upload artifact after build
      - uses: actions/upload-artifact@v4
        with:
          name: app-${{ github.ref_name }}  # app-master or app-develop
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/flutter-apk/app-develop.apk

      # Deploy to Google Play Store
      # - name: Deploy to Play Store (master)
      #   if: github.ref_name == 'master'
      #   uses: r0adkll/upload-google-play@v1
      #   with:
      #     serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
      #     packageName: your.package.name
      #     releaseFiles: build/app/outputs/flutter-apk/app-release.apk
      #     track: internal # Or production, beta, alpha
      #     status: completed # Or draft
